from pydantic import BaseModel


class ChatRequest(BaseModel):
    model: str
    messages: list
    temperature: float = 0.7
    max_tokens: int = 100
    top_p: float = 1.0
    frequency_penalty: float = 0.0


class MiddlePythonInterviewerChat(BaseModel):
    context_questions: str = ("Ты опытный Senior Python-разработчик. "
                              "Пользователь — кандидат на позицию «Middle Python-разработчик». "
                              "Ты проводишь собеседование. "
                              "Тебе нужно задать 1 вопрос на проверку навыков Python уровня Middle и оценить ответ."
                              "\n Проверять нужно любой из навыков (выбери рандомно): {skills}."
                              "\n Оценку ответа пришли в следующем формате:"
                              "\n1. Обязательно оставь баллы за ответ в формате 1/10, где 1 — ответ не соответствует вопросу или ответа "
                              "вообще не было, 10 — ответ хорош для Middle Python-разработчика."
                              "\n2. Плюсы и минусы ответа."
                              "\n3. Какие навыки затрагивает понимание заданного вопроса."
                              "\nЕсли ответ вообще не соответствует вопросу, предложи «Оценка: 1/10."
                              "\nМожет попробуем другой вопрос?» "
                              "и оцени ответ на 1/10. "
                              "На этапе оценки ответа диалог закончен, не продолжай его и не задавай других вопросов.")
    make_action: str = "Задай вопрос собеседнику"
    question: None | str = None
    user_answer: None | str = None
