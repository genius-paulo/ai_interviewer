from pydantic import BaseModel
from typing import Optional


class Commands:
    start = 'start'

    get_question_command = 'get_question'
    get_question_text = '‚ùìÔ∏è–ü–æ–ª—É—á–∏—Ç—å –≤–æ–ø—Ä–æ—Å'

    change_skills_command = 'change_skill'
    change_skills_text = 'üí™ –í—ã–±—Ä–∞—Ç—å –Ω–∞–≤—ã–∫'

    profile_command = 'profile'
    profile_text = 'üë§ –ü—Ä–æ—Ñ–∏–ª—å'

    change_mode_command = 'mode'
    change_mode_text = '‚öôÔ∏è –í—ã–±—Ä–∞—Ç—å —Ä–µ–∂–∏–º –∏–Ω—Ç–µ—Ä–≤—å—é'

    another_question_text = 'üîÅ –î—Ä—É–≥–æ–π –≤–æ–ø—Ä–æ—Å'

    cancel_command = 'cancel'
    cancel_text = 'üôÖ–û—Ç–º–µ–Ω–∞'


class SkillsData(BaseModel):
    basic: str = '–û—Å–Ω–æ–≤—ã Python'
    oop: str = '–û–û–ü'
    standard_lib: str = '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞'
    async_prog: str = '–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ'
    db: str = '–†–∞–±–æ—Ç–∞ —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö'
    web: str = '–í–µ–±-—Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∏ –∏ RESTful API'
    test: str = '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ'
    docs: str = '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∏ —Å—Ç–∏–ª—å –∫–æ–¥–∞'
    devops: str = '–ö–æ–Ω—Ç—Ä–æ–ª—å –≤–µ—Ä—Å–∏–π, CI/CD, –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã'
    efficiency: str = '–ü—Ä–æ–±–ª–µ–º—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏'
    additional: str = '–ü–∞—Ç—Ç–µ—Ä–Ω—ã –ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'
    algorithms: str = '–°—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –∏ –∞–ª–≥–æ—Ä–∏—Ç–º—ã'

    def get_values(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–π –∞—Ç—Ä–∏–±—É—Ç–æ–≤."""
        return list(self.model_dump().values())


class User(BaseModel):
    id: Optional[int] = None
    tg_id: int
    mode: Optional[str] = None
    skill: Optional[str] = None


class Modes(BaseModel):
    all: str = 'all'
    specific: str = 'specific'
    worst: str = 'worst'


# TODO: –≠—Ç–æ –Ω—É–∂–Ω–æ —É–±—Ä–∞—Ç—å
mode = Modes()
